@inject IJSRuntime JSRuntime;

<MatDrawerContainer Style="width: 100vw; height: 100vh;">
    <MatDrawer @bind-Opened="@Opened" Mode="@MatDrawerMode.Modal">
        <ul>
            <li>
                <NavLink class="nav-link" href="/about" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true">About</span>
                </NavLink>
            </li>
        </ul>
    </MatDrawer>
    <MatDrawerContent>
        <div class="mat-layout-grid">
            <div class="mat-layout-grid-inner">
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                    <div class="row justify-content-center">
                        <h1>@Title</h1>
                    </div>
                </div>

                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">

                    <p>
                        Hi team CIB , thanks for the test, I haven't done everthing I should (proper error handling, commenting etc) because I spent most of my time up-skilling my self on Microsofts Blazor (server-side UI rendering on .net Core 3.1 Preview) with a Material desgin look and feel (my fav), and just getting it working took me longe enough, but im happy its somewhat complete.
                    </p>
                    <p>
                        I used this oppotunity to learn something new and I thank you for that, just don't mind my poor front end skils, lol, enjoy.
                    </p>

                    <p>
                        JS Text: <span>@JsText</span>
                    </p>

                </div>

                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                    <MatRipple class="demo-mat-ripple">
                        Click here
                    </MatRipple>
                    <MatRipple class="demo-mat-ripple" Color="@MatRippleColor.Primary">
                        Primary
                    </MatRipple>
                    <MatRipple class="demo-mat-ripple" Color="@MatRippleColor.Secondary">
                        Secondary
                    </MatRipple>
                </div>
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                    <p>
                        <div>
                            <MatButton OnClick="@JsButtonClicked">Js Button </MatButton>
                        </div>
                        <div>
                            <MatButton OnClick="@((e) => ButtonClicked())">Open About_Index  Menu</MatButton>
                        </div>
                    </p>
                </div>
            </div>
        </div>


    </MatDrawerContent>
</MatDrawerContainer>


<style>
    .demo-mat-ripple {
        width: 33%;
        height: 300px;
        display: flex;
        align-items: center;
        justify-content: center;
        display: inline-flex;
    }
</style>




@code {
    [Parameter] public string Title { get; set; }
    public string JsText { get; set; }

    bool Opened = false;

    void ButtonClicked()
    {
        Opened = !Opened;
    }

    async Task JsButtonClicked()
    {
        JsText = await JSRuntime.InvokeAsync<string>("Add", 1, 2);
    }

}
